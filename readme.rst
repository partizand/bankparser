==============
bankparser
==============

Преобразование файлов выписок от банков в qif формат.
Создан для работы с GnuCash, т.к. GnuCash не умеет импортировать выписки ofx с символами Unicode.

Пока тестовая версия

Установка
---------

Используется Python 3

Зайти в каталог с исходниками::

  pip install .

Использование
-------------
::

 bankparser bank_name in_file_name [--outfile out_file_name]

bank_name
  Имя банка - это имя ini файла с настройками банка

in_file_name
  Имя обрабатываемого файла из банка

out_file_name
  Имя сформированного файла (опционально)

Настроенные банки
-----------------

.. banks_start

- `Альфа-директ`_ отчет о движении денежных средств 2016. Параметр запуска **admoney**. Файл выписки report.txt
    .. _`Альфа-директ`: http://alfadirect.ru
- `Альфа-директ`_ отчет об урегулированных сделках 2016. Параметр запуска **adshares**. Файл выписки report.txt
    .. _`Альфа-директ`: http://alfadirect.ru
- `ВТБ24`_ . Параметр запуска **vtb24**. Файл выписки statement.csv
    .. _`ВТБ24`: http://vtb24.ru

.. banks_finish

---------------
Настройка банка
---------------

Для настройки на свой банк создайте ini файл с именем банка. Bank_name.ini.
В общей секции укажите настройки банка

.. commons_start

Описание настроек секции [common]: 

delimiter
   Разделитель полей. По умолчанию: ";"
startafter
   Начинать разбор строк со следующей, после стоки начинающейся с указанных символов. По умолчанию: None
dateformat
   Формат даты в банковском файле. По умолчанию: "%Y-%m-%d %H:%M:%S"
encoding
   Кодировка файла. По умолчанию: "utf-8"
fields
   Имена полей в файле через пробел, нужные поля должны совпадать с именем в описанни доступных полей. По умолчанию: []
type
   Тип выписки: Bank или Invst (обычная или операции с ценными бумагами). По умолчанию: "Bank"
banksite
   Ссылка на сайт банка. По умолчанию: None
bankname
   Название банка. По умолчанию: None
statementfilename
   Стандартное имя файла выписки. По умолчанию: ''
description
   Описание. По умолчанию: ''

.. commons_finish

Секции
^^^^^^

Возможно добавить секци для замены значения любого поля на заданные в словаре секции.
Для этого необходимо создать секцию с именем поля. Для подмены используйте строки::

 значение_в_файле_выписки=подменяемое_значение

Например для замены номеров счетов на имена счетов в GnuCash создайте секцию [account]::

 [account]
 40817=Мой счет

Секцию [action] можно использовать для приведения названия операций с ценными бумагами
на стандартные buy или sell::

  [action]
  Покупка=buy
  Продажа=sell

Если банк не указывает знак операции в сумме, а выписка содержит поле со значениеми, например "расход/доход",
то задайте это поле как amountsign. И создайте секцию [amountsign] с указанием знаков операций
(+ можно не указывать)::

 [amountsign]
  Расход=-

Поля в выписке
--------------

Должны быть указаны все поля в выписке в параметре fields в общей секции банка через пробел.
Нужные имена полей должны совпадать с нижеописанными. Если поле не нужно обрабатывать присвойте ему любое
другое имя

.. fields_start

Описание полей: 

amount
   Сумма. Тип поля: float
amountsign
   Слово указание на списание или зачисление, для определения знака суммы. Тип поля: string
account
   Счет. Тип поля: string
date
   Дата проводки. Тип поля: datetime
description
   Описание. Тип поля: string
action
   Операция (для ценных бумаг): buy, sell. Для приведения к стандартным операциям используйте секцию [action]. Например [action] Покупка. Тип поля: string
securityname
   Имя ценной бумаги. Тип поля: string
price
   Цена (для ценных бумаг). Тип поля: float
quantity
   Количество бумаг. Тип поля: float
commission
   Комиссия (для ценных бумаг). Тип поля: float
payee
   Получатель платежа. Тип поля: string
numbercheck
   Номер чека (Номер транзакции ?). Тип поля: string
category
   Название счета для списания/зачисления (второй счет проводки). Например, Расходы:Питание. Тип поля: string

.. fields_finish

setup notes
-----------

Некоторые файлы и часть справки генерятся автоматом из build.py

Для копирования скрипта без установки и создания .bat для банков (делал для отладочных целей)::

 setup.py copyscript --pubdir каталог_публикации

Для генерации файлов .py и добавления информации в readme.rst::

 setup.py genfiles

Или можно запустить build.py. Он сделает обе эти операции.

Это нужно, что бы одна и таже информаци не хранилась дважды и не дублировалась.

Информация о возможных полях в выписке хранится в файле statementline.py и оттуда попадает
в qifline.py (только поля для которых задана буква qif)
и в справку.

Информация полях о настройки банка хранится в confcommons.py и оттуда попадает в справку.

Информация о настроенных банках хранится в *.ini и оттуда попадает в справку.

::

  statementline.py -> qifline.py
                   -> readme.rst (.. fields_start  .. fields_finish)

  confcommons.py   -> readme.rst (.. commons_start  .. commons_finish)

  *.ini       -> readme.rst (.. banks_start  .. banks_finish)

Для добавления обработки поля выписки его нужно добавить в файл statementline.py




Лицензия
--------

GNU GPL 3

Автор
-----

Andrey Kapustin